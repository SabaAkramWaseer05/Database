-- Step 1: Create Database
CREATE DATABASE HotelManagementSystem;
USE HotelManagementSystem;

-- Step 2: Create Tables

-- 1. Rooms Table
CREATE TABLE Rooms (
    RoomID INT PRIMARY KEY AUTO_INCREMENT,
    RoomType VARCHAR(100) NOT NULL,
    PricePerNight DECIMAL(8, 2) NOT NULL,
    IsAvailable BOOLEAN DEFAULT TRUE,
    Capacity INT NOT NULL
);

-- 2. Customers Table
CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY AUTO_INCREMENT,
    FirstName VARCHAR(100) NOT NULL,
    LastName VARCHAR(100) NOT NULL,
    Email VARCHAR(150) UNIQUE NOT NULL,
    Phone VARCHAR(15),
    Address VARCHAR(255)
);

-- 3. Bookings Table
CREATE TABLE Bookings (
    BookingID INT PRIMARY KEY AUTO_INCREMENT,
    RoomID INT,
    CustomerID INT,
    CheckInDate DATE NOT NULL,
    CheckOutDate DATE NOT NULL,
    TotalAmount DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (RoomID) REFERENCES Rooms(RoomID),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

-- 4. Staff Table
CREATE TABLE Staff (
    StaffID INT PRIMARY KEY AUTO_INCREMENT,
    FirstName VARCHAR(100) NOT NULL,
    LastName VARCHAR(100) NOT NULL,
    Position VARCHAR(50),
    HireDate DATE,
    Salary DECIMAL(10, 2) NOT NULL
);

-- 5. Services Table
CREATE TABLE Services (
    ServiceID INT PRIMARY KEY AUTO_INCREMENT,
    ServiceName VARCHAR(100) NOT NULL,
    ServicePrice DECIMAL(8, 2) NOT NULL
);

-- 6. Booking_Services Table (Many-to-Many Relationship between Bookings and Services)
CREATE TABLE Booking_Services (
    BookingID INT,
    ServiceID INT,
    PRIMARY KEY (BookingID, ServiceID),
    FOREIGN KEY (BookingID) REFERENCES Bookings(BookingID),
    FOREIGN KEY (ServiceID) REFERENCES Services(ServiceID)
);

-- Step 3: Insert Sample Data

-- Insert into Rooms Table
INSERT INTO Rooms (RoomType, PricePerNight, IsAvailable, Capacity)
VALUES 
    ('Single', 75.00, TRUE, 1),
    ('Double', 120.00, TRUE, 2),
    ('Suite', 250.00, TRUE, 4);

-- Insert into Customers Table
INSERT INTO Customers (FirstName, LastName, Email, Phone, Address)
VALUES 
    ('John', 'Doe', 'john.doe@example.com', '123-456-7890', '123 Maple St, Springfield'),
    ('Jane', 'Smith', 'jane.smith@example.com', '234-567-8901', '456 Oak Ave, Riverside');

-- Insert into Staff Table
INSERT INTO Staff (FirstName, LastName, Position, HireDate, Salary)
VALUES 
    ('Emily', 'Brown', 'Manager', '2022-01-15', 60000),
    ('Michael', 'Johnson', 'Receptionist', '2023-06-01', 32000);

-- Insert into Services Table
INSERT INTO Services (ServiceName, ServicePrice)
VALUES 
    ('Room Service', 20.00),
    ('Spa Access', 50.00),
    ('Breakfast', 15.00);

-- Insert into Bookings Table
INSERT INTO Bookings (RoomID, CustomerID, CheckInDate, CheckOutDate, TotalAmount)
VALUES 
    (1, 1, '2024-11-01', '2024-11-05', 300.00), 
    (2, 2, '2024-12-10', '2024-12-15', 600.00);

-- Insert into Booking_Services Table
INSERT INTO Booking_Services (BookingID, ServiceID)
VALUES 
    (1, 1), -- Booking 1 has Room Service
    (1, 3), -- Booking 1 has Breakfast
    (2, 2); -- Booking 2 has Spa Access

-- Step 4: Queries for Hotel Activities

-- a) List all bookings along with customer details and room information
SELECT B.BookingID, C.FirstName, C.LastName, R.RoomType, B.CheckInDate, B.CheckOutDate, B.TotalAmount
FROM Bookings B
JOIN Customers C ON B.CustomerID = C.CustomerID
JOIN Rooms R ON B.RoomID = R.RoomID;

-- b) Get the available rooms
SELECT RoomID, RoomType, PricePerNight, Capacity
FROM Rooms
WHERE IsAvailable = TRUE;

-- c) List all services used by a specific booking (Booking ID 1)
SELECT S.ServiceName, S.ServicePrice
FROM Services S
JOIN Booking_Services BS ON S.ServiceID = BS.ServiceID
JOIN Bookings B ON BS.BookingID = B.BookingID
WHERE B.BookingID = 1;

-- d) Calculate the total revenue generated from bookings
SELECT SUM(TotalAmount) AS TotalRevenue
FROM Bookings;

-- e) List all staff members with their positions and hire dates
SELECT FirstName, LastName, Position, HireDate, Salary
FROM Staff
ORDER BY HireDate DESC;
