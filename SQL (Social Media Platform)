-- Step 1: Create Database
CREATE DATABASE SocialMediaPlatform;
USE SocialMediaPlatform;

-- Step 2: Create Tables

-- 1. Users Table
CREATE TABLE Users (
    UserID INT PRIMARY KEY AUTO_INCREMENT,
    Username VARCHAR(50) UNIQUE NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL,
    Password VARCHAR(100) NOT NULL,
    Bio VARCHAR(255),
    JoinDate DATE DEFAULT CURRENT_DATE
);

-- 2. Posts Table
CREATE TABLE Posts (
    PostID INT PRIMARY KEY AUTO_INCREMENT,
    UserID INT,
    Content TEXT NOT NULL,
    PostDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

-- 3. Comments Table
CREATE TABLE Comments (
    CommentID INT PRIMARY KEY AUTO_INCREMENT,
    PostID INT,
    UserID INT,
    CommentText TEXT NOT NULL,
    CommentDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PostID) REFERENCES Posts(PostID),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

-- 4. Likes Table
CREATE TABLE Likes (
    LikeID INT PRIMARY KEY AUTO_INCREMENT,
    PostID INT,
    UserID INT,
    LikeDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PostID) REFERENCES Posts(PostID),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

-- 5. Friendships Table (to represent user-to-user friendships)
CREATE TABLE Friendships (
    FriendshipID INT PRIMARY KEY AUTO_INCREMENT,
    UserID1 INT,
    UserID2 INT,
    FriendshipDate DATE DEFAULT CURRENT_DATE,
    FOREIGN KEY (UserID1) REFERENCES Users(UserID),
    FOREIGN KEY (UserID2) REFERENCES Users(UserID),
    UNIQUE (UserID1, UserID2)
);

-- Step 3: Insert Sample Data

-- Insert into Users Table
INSERT INTO Users (Username, Email, Password, Bio)
VALUES 
    ('alice123', 'alice@example.com', 'password1', 'Loves photography and traveling.'),
    ('bob_the_builder', 'bob@example.com', 'password2', 'Building dreams one post at a time.'),
    ('carla_k', 'carla@example.com', 'password3', 'Foodie | Traveler | Dreamer.');

-- Insert into Posts Table
INSERT INTO Posts (UserID, Content)
VALUES 
    (1, 'Exploring the mountains this weekend! #adventure'),
    (2, 'Finally completed my new house project! #builderlife'),
    (3, 'The best pasta I ever had! #foodie');

-- Insert into Comments Table
INSERT INTO Comments (PostID, UserID, CommentText)
VALUES 
    (1, 2, 'That sounds amazing, Alice!'),
    (2, 1, 'Looks great, Bob!'),
    (3, 1, 'Where did you have it?');

-- Insert into Likes Table
INSERT INTO Likes (PostID, UserID)
VALUES 
    (1, 2), -- Bob liked Alice's post
    (1, 3), -- Carla liked Alice's post
    (2, 1), -- Alice liked Bob's post
    (3, 2); -- Bob liked Carla's post

-- Insert into Friendships Table
INSERT INTO Friendships (UserID1, UserID2)
VALUES 
    (1, 2), -- Alice and Bob are friends
    (1, 3), -- Alice and Carla are friends
    (2, 3); -- Bob and Carla are friends

-- Step 4: Queries for Social Media Activities

-- a) List all posts with their authors, content, and post date
SELECT U.Username, P.Content, P.PostDate
FROM Posts P
JOIN Users U ON P.UserID = U.UserID
ORDER BY P.PostDate DESC;

-- b) Retrieve all comments on a specific post (e.g., PostID 1)
SELECT U.Username, C.CommentText, C.CommentDate
FROM Comments C
JOIN Users U ON C.UserID = U.UserID
WHERE C.PostID = 1
ORDER BY C.CommentDate;

-- c) Count the number of likes for each post
SELECT P.Content, COUNT(L.LikeID) AS LikeCount
FROM Posts P
LEFT JOIN Likes L ON P.PostID = L.PostID
GROUP BY P.PostID
ORDER BY LikeCount DESC;

-- d) List all friends of a specific user (e.g., Alice)
SELECT U.Username AS Friend
FROM Friendships F
JOIN Users U ON (F.UserID1 = U.UserID OR F.UserID2 = U.UserID)
WHERE (F.UserID1 = (SELECT UserID FROM Users WHERE Username = 'alice123')
    OR F.UserID2 = (SELECT UserID FROM Users WHERE Username = 'alice123'))
    AND U.Username <> 'alice123';

-- e) Get all posts liked by a specific user (e.g., Bob)
SELECT P.Content, P.PostDate
FROM Likes L
JOIN Posts P ON L.PostID = P.PostID
JOIN Users U ON L.UserID = U.UserID
WHERE U.Username = 'bob_the_builder';
